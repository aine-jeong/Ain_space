class Product001{
    int price;
    int bonuspoint;
    
    Product001(int price) {
        this.price = price;
        this.bonuspoint = (int)(this.price / 10.0);
    }
}

class KtTv001 extends Product001{
    // 가격에 대한 정보는 부모가 가지고 있다.
    KtTv001() {
        super(500);
    }
    
    @Override
    public String toString() {
        return "KtTv";
    }
}

class Audio001 extends Product001{
    // 가격에 대한 정보는 부모가 가지고 있다.
    Audio001() {
        super(100);
    }
    
    @Override
    public String toString() {
        return "Audio";
    }
}

class NoteBook001 extends Product001{
    // 가격에 대한 정보는 부모가 가지고 있다.
    NoteBook001() {
        super(150);
    }
    
    @Override
    public String toString() {
        return "NoteBook";
    }
}

class Buyer001{
    int money = 1000;
    int bonuspoint;
    
    // 다형성~~~~~~~
    void Buy(Product001 n) { // 구매자가 어떤 물건 정보를 알아야한다. (그 물건의 가격 정보를 얻어올 수 있다)
        if(this.money < n.price) {
            System.out.println("고객님 잔액이 부족합니다 ^^! \n현재 잔액: " + this.money);
            return; // 함수의 종료(구매행위 종료)
        }
        //실제 구매 행위
        this.money -= n.price; // 잔액
        this.bonuspoint += n.bonuspoint; // 누적
        System.out.println("구매한 물건: "+n.toString()); 
        // toString -> 왜 주소값 아니고 제품의 이름이 찍히지 ? >> 재정의해뒀으니까~~~~~~
        // 만약에 재정의 안했다면 super썼어야 한다.
        // ㄴ> 자식클래스에서 오버라이딩된 toString()을 재정의되기 전 원래 기능으로 쓰려면 
        // super.toString() 으로 쓰면 된다.
    }
    
}


public class Practice {
    public static void main(String[] args) {
        KtTv001 kttv = new KtTv001();
//        Audio001 audio = new Audio001();
//        NoteBook001 notebook = new NoteBook001();
//        
//        Buyer001 buyer = new Buyer001();
//        buyer.Buy(kttv);
//        buyer.Buy(audio);
//        buyer.Buy(notebook);
//        buyer.Buy(kttv);
//        
        Product001 p = new Product001(500);
        System.out.println(kttv);
        
        
    }
}
