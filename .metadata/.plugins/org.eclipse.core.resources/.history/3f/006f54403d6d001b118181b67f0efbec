package kr.or.bit;
import java.util.Random;
import java.util.Scanner;

public class Cinema {
    private Scanner sc = new Scanner(System.in);
    Random r = new Random();
    int userrow, usercol;
    

    private final int ROW = 4; // 영화관 행의 수
    private final int COL = 5; // 영화관 열의 수

    public String[][] seat = new String[ROW][COL]; // 좌석 배열
    public String[][] number = new String[ROW][COL]; // 랜덤 번호를 넣을 배열

    private void reset() { // 좌석배치 (=초기화)
        seat = new String[ROW][COL];
        for (int i = 0; i < seat.length; i++) {
            for (int j = 0; j < seat[i].length; j++) {
                seat[i][j] = (i + 1) + "-" + (j + 1);
            }
        }
    }

    private void print() { // 좌석 현황 출력 (예매된 좌석에는 "예매" 출력)
        System.out.println("**********좌석현황*********");
        for (int i = 0; i < seat.length; i++) {
            for (int j = 0; j < seat[i].length; j++) {
                System.out.printf("[%s]", seat[i][j]);
            }
            System.out.println();
        }
        System.out.println("*************************");
    }

    // 메뉴 구현
    public void Cinema_Menu() {
        reset();
        while (true) {
            switch (showMenu()) {
            case 1:
                Reservation();// 예매하기 (Reservation)
                break;
            case 2:
                Info();// 예매조회 (Info)
                break;
            case 3:
                Cancel();// 예매취소 (Cancel)
                break;
            case 4: // 프로그램 종료
                System.out.println("이용해주셔서 감사합니다.");
                System.exit(0);
            default:
                System.out.println("이용할 수 없는 메뉴입니다.");
                break;
            }
        }
    } // Cinema_Menu end
    
    // 메뉴 인출후 입력값 받기
    private int showMenu() {
        System.out.println("***********************");
        System.out.println("*****영화 예매 시스템*****");
        System.out.println("***********************");
        System.out.println("1. 예매하기");
        System.out.println("2. 예매조회");
        System.out.println("3. 예매취소");
        System.out.println("4. 프로그램 종료 \n");
        System.out.print("원하는 메뉴 번호를 입력해주세요> ");

        int menu = 0;

        do { // 사용자가 존재하지 않는 메뉴를 선택한 경우
            try {
                menu = Integer.parseInt(sc.nextLine());
                if (menu >= 1 && menu <= 4) {
                    break;
                } else {
                    throw new Exception("존재하지 않는 메뉴번호 입니다.");
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
                System.out.println("1~4번의 메뉴 중 선택해주세요.");
            }
        } while (true);

        return menu;
    } // showMenu end
    
    private void Reservation() {// 1. 예매하기

        String userSeat; // 예매시 사용자가 선택한 좌석
        print(); // 좌석현황 출력
        System.out.println("좌석을 선택해주세요. 예) [1-1]");
        System.out.println("이미 예매된 좌석은 [예매]라고 표시됩니다.");
        userSeat = sc.nextLine();

        // 8자리 예매번호 랜덤 추출
        String ran = Integer.toString(r.nextInt(8) + 1);
        for (int i = 0; i < 7; i++) {
            ran += Integer.toString(r.nextInt(9));
        }

        // 사용자가 선택한 좌석에 예매번호 넣기
        for (int i = 0; i < seat.length; i++) {
            for (int j = 0; j < seat[i].length; j++) {
                if(seat[i][j].equals("예매")) {
                    System.out.println("이미 예약된 좌석입니다. \n");
                    break;
                } else if (seat[i][j].equals(userSeat)) {
                    seat[i][j] = "예매";
                    number[i][j] = ran; // 사용자가 선택한 좌석의 number배열에 예매번호넣기
                    userrow = i;
                    usercol = j;
                    System.out.println("예매가 완료되었습니다.");
                    System.out.printf("예매한 좌석번호[%s]/ 예매번호:[%s]\n", userSeat, ran);
                    System.out.println("감사합니다. \n");
                }
            }
        }
    } // reservation end

    private void Info() { // 2. 조회하기
        String userNum; // 유저한테 예매번호 입력받을곳
        boolean a = false; // 예매번호 조회 실패했을 때 출력용
        System.out.println("예매번호를 입력해주세요.");
        userNum = sc.nextLine();
        
        if (userNum.equals(number[userrow][usercol])) {
            for (int i = 0; i < number.length; i++) {
               for (int j = 0; j < number[i].length; j++) {
                  if (userNum.equals(number[i][j])) {
                     System.out.println("고객님이 예매하신 좌석은 [" + (i + 1) + "-" + (j + 1) + "]입니다.\n");
                     return;
                  }
               }
            }
         } else {
            System.out.println("예매내역이 없습니다.");
            return;
         }
    } // Info end

    private void Cancel() { // 3. 취소하기
        
        String userNum; // 유저한테 예매번호 입력받을곳
        String userNum2; 

        System.out.println("예매번호를 입력해주세요.");
        userNum = sc.nextLine();
        if (userNum.equals(number[userrow][usercol])) {

            for (int i = 0; i < seat.length; i++) {
               for (int j = 0; j < number[i].length; j++) {
                  if (userNum.equals(number[i][j])) {
                     System.out.println("예매를 취소하시겠습니까?");
                     System.out.println("네(1), 아니오(2)중 하나를 입력해주세요.");
                     userNum2 = sc.nextLine();
                     if (userNum2.equals("1")) {
                        number[i][j] = (i + 1) + "-" + (j + 1);
                        seat[i][j] = (i+1)+"-"+(j+1);
                        System.out.println("예매가 취소되었습니다.");
                        System.out.println("고객님이 취소하신 좌석은 [" + (i + 1) + "-" + (j + 1) + "]입니다.\n");
                        System.out.println("감사합니다.");
                        return;
                     } else {
                         return;
                     }
                  }
               }
            }
         } else {
            System.out.println("예매내역이 없습니다.");
            return;
         }
    } // Cancel end


} // class end
