import java.util.ArrayList;

/*
 ###TODAY POINT###
 
 */

public class Ex02_ArrayList {
    public static void main(String[] args) {
        // List 인터페이스 구현: 순서가 있고, 중복이 허용되는 데이터 집합을 다룰 때 쓰는 클래스
        
        ArrayList arraylist = new ArrayList();
        // Object 타입을 가지는 정적 배열이 Heap에 만들어졌다!
        arraylist.add(100);
        arraylist.add(200);
        arraylist.add(300);
        
        for(int i = 0 ; i < arraylist.size() ; i++) {
            System.out.println(arraylist.get(i));
        }
        
        System.out.println(arraylist.toString());
        System.out.println(arraylist.get(0));
        
        // 순차적인 데이터를 다루는 것의 장단점
        // 데이터를 순서대로 놓을 수 있다는 이점이 있지만, (순서가 있는 데이터에 적합하다)
        // 중간에 데이터가 추가되거나 삭제되면 그 뒤에 있던 데이터들이 전부 이동해야 한다.
        // ㄴ> 비순차적인 데이터를 추가, 삭제하는 것에 대한 단점이 있다.
        
        // [100, 200, 300] >> [111,100, 200, 300]
        arraylist.add(0, 111);
        System.out.println(arraylist); // [111, 100, 200, 300]
        arraylist.add(400);
        System.out.println(arraylist); // [111, 100, 200, 300, 400]
        // 추가적으로 데이터를 삽입할 수 있지만, 자리이동이 일어난다.
        
//  arraylist.remove(100); // java.lang.IndexOutOfBoundsException: Index 100 out of bounds for length 5
        // 값이 아닌 인덱스 번호를 입력해야 한다.       ㄴ> 100번째 방은 없는뎅??
       
        // 현재 arraylist: [111, 100, 200, 300, 400]
        // ArrayList 함수공부 (String 함수 학습)
        System.out.println(arraylist.contains(200)); // ()안의 값을 가지고 있니? >> true
        System.out.println(arraylist.contains(2000)); // >> false
        
        arraylist.clear(); // 데이터만 삭제 , 공간은 유지된다.
        System.out.println(arraylist.size()); // >0
        System.out.println(arraylist.isEmpty()); // 너 비어있니? >> true
        
        arraylist.add(101);
        arraylist.add(102);
        arraylist.add(103);
        
        System.out.println(arraylist.isEmpty()); // >> false
        
        System.out.println("데이터 삭제 전: " + arraylist.size()); // >> 3
        //arraylist.remove(0); 0번째 방의 값을 삭제 -> 삭제된 값을 리턴해준다.
        Object value = arraylist.remove(0);
        System.out.println("value: " + value);
        System.out.println("데이터 삭제 후: " + arraylist.size());
        System.out.println(arraylist); // >> [102, 103]
        
    }
}
