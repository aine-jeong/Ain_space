import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.Arrays;

/*
 Stream 중간 매개체(데이터 통로) -> Default가 Byte다
 
 JAVA API가 추상클래스로 생성해 두었다
 InputStream , OutputStream (추상자원)
 
 > 입출력 "대상"에 따라서 여러개의 추상클래스를 상속받아서 재정의해서 써야한다.
 1. Memory: ByteArray I/O Stream
 2. File: File I/O Stream (주로 사용하는 것은 요고다)
  
 */

public class Ex01_Stream {
    public static void main(String[] args) {
        //byte(-128~127까지의 정수값을 저장하는 타입)
        //연속적인 데이터를 다룬다 -> 배열!
        byte[] inSrc = {0,1,2,3,4,5,6,7,8};
        byte[] ourSrc = null; // 현재 메모리를 가지고 있지 않다 (초기화x)
        
        //데이터를 read, write하자 / 대상: memory
        ByteArrayInputStream input = null; //이 스트림을 사용해서 memory를 read
        ByteArrayOutputStream output = null; //이 스트림을 사용해서 memory를 write
        
        input = new ByteArrayInputStream(inSrc); // read / 파라미터로 리소스를 준다 / 빨대를 배열에 꽂은 것
        output = new ByteArrayOutputStream(); // write
        
        System.out.println("ourSrc before: " + Arrays.toString(ourSrc));
        
        //공식같은 로직
        int data = 0;
        while((data = input.read()) != -1) { // 더이상 read할 data가 없으면 -1(읍써임마)이 리턴된다.
            System.out.println("data: " + data);
        }
        
    }
}
