package Bank;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class Account {

    private String accountNo;
    private String name;
    private long balance;
    private Transaction[] transactions = new Transaction[30]; // 크기를 어떻게 지정해야되지 ......

    // ㅠ_ㅠ...
    public int num = -1;

    public Account(String accountNo, String name) {
        this.accountNo = accountNo;
        this.name = name;
//        this.balance = 0;
//        this.transaction = null;
    }

    // ------------------------------------------
    public Account(String accountNo, String name, long balance, Transaction[] transaction) {
        super();
        this.accountNo = accountNo;
        this.name = name;
        this.balance = balance;
        this.transactions = transaction;
    }

    public String getAccountNo() {
        return accountNo;
    }

    public void setAccountNo(String accountNo) {
        this.accountNo = accountNo;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setBalance(long balance) {
        this.balance = balance;
    }

    public void setTransaction(Transaction[] transaction) {
        this.transactions = transaction;
    }

    @Override
    public String toString() {
        return "[계좌번호: " + accountNo + ", 소유자 명: " + name + ", 잔액: " + balance + "]";
    }

    // ------------------------------------------

    public void deposit(long amount) { //입금
        this.balance += amount;
        this.num++;

        // Transaction(String transactionDate, String transactionTime, String kind, long
        // amount, long balance)

        Date date = new Date();
        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy.MM.dd");
        String transactionDate = dateformat.format(date);

        SimpleDateFormat timeformat = new SimpleDateFormat("HH:mm:ss");
        String transactionTime = timeformat.format(date);

        Transaction transaction = new Transaction(transactionDate, transactionTime, "입금", amount, this.balance);
        this.transactions[num] = transaction;
    }

    public void withdraw(long amount) { //출금
        if (this.balance < amount) {
            System.out.println("잔액이 부족합니다.");
            System.out.println("현재 잔고: " + this.balance);
        } else {
            this.balance -= amount;
            this.num++;

            Date date = new Date();
            SimpleDateFormat dateformat = new SimpleDateFormat("yyyy.MM.dd");
            String transactionDate = dateformat.format(date);

            SimpleDateFormat timeformat = new SimpleDateFormat("HH:mm:ss");
            String transactionTime = timeformat.format(date);

            Transaction transaction = new Transaction(transactionDate, transactionTime, "출금", amount, this.balance);
            this.transactions[num] = transaction;
        }
    }

    public long getBalance() { //잔고확인하기
        return balance;
    }

    public Transaction[] getTransaction() { //거래내역보기
        return transactions;
    }

}
